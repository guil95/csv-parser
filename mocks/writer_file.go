// Code generated by mockery v2.43.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	parser "github.com/guil95/csv-parser/internal/parser"
)

// WriterFile is an autogenerated mock type for the WriterFile type
type WriterFile struct {
	mock.Mock
}

// GenerateFile provides a mock function with given fields: ctx, lines, filePath
func (_m *WriterFile) GenerateFile(ctx context.Context, lines []parser.Line, filePath string) error {
	ret := _m.Called(ctx, lines, filePath)

	if len(ret) == 0 {
		panic("no return value specified for GenerateFile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []parser.Line, string) error); ok {
		r0 = rf(ctx, lines, filePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWriterFile creates a new instance of WriterFile. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWriterFile(t interface {
	mock.TestingT
	Cleanup(func())
}) *WriterFile {
	mock := &WriterFile{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
